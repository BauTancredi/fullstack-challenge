import type { NextPage } from "next";

import { useState } from "react";
import useSWR from "swr";
import Head from "next/head";

import IntegrationsList from "../components/IntegrationsList";
import styles from "../styles/Home.module.css";
import { Integration } from "../types";
import Modal from "../components/Modal";

const fetcher = (url: string) => fetch(url).then((res) => res.json());

const Home: NextPage = () => {
  // Could use useReducer + useContext here, but useState is fine for now
  const [open, setOpen] = useState(false);
  const [integration, setIntegration] = useState<Integration | null>(null);

  const { data, error } = useSWR("/api/integrations", fetcher);

  if (error) return <div>Failed to load</div>;

  if (!data) return <div>Loading...</div>;

  return (
    <div className={styles.container}>
      <Head>
        <title>Blinq • Integrations</title>
        <meta content="Generated by create next app" name="description" />
        <link href="/favicon.ico" rel="icon" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Blinq</h1>

        <p className={styles.description}>Connect your Blinq account to your favourite services</p>

        <IntegrationsList integrations={data} setIntegration={setIntegration} setOpen={setOpen} />
      </main>
      {open ? (
        <Modal data={integration!} setIntegration={setIntegration} setOpen={setOpen} />
      ) : null}
    </div>
  );
};

export default Home;

// TODO
// Add index.ts database & user.ts pages/api
// Refactor modal
// HubSpot field mappings
